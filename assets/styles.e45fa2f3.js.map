{"version":3,"file":"styles.e45fa2f3.js","sources":["../../src/components/Border/styles.ts","../../src/components/Spacings/styles.ts","../../src/components/GeneralTokensGrid/index.tsx","../../src/components/Fonts/styles.ts","../../src/components/FontSizes/styles.ts","../../src/components/FontWeights/styles.ts","../../src/components/LineHeights/styles.ts","../../src/components/Typographies/styles.ts"],"sourcesContent":["import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  font-family: \"Roboto\", sans-serif;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 8rem;\n\n  p,\n  h2,\n  h3 {\n    margin: 0;\n  }\n`;\n\nexport const BorderType = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 3rem;\n\n  & > h2 {\n    font-size: 2.25rem;\n    font-weight: 700;\n  }\n`;\n\nexport const Borders = styled.div`\n  display: flex;\n  gap: 4rem;\n`;\n\nexport const BorderSpecification = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n\n  span {\n    color: #ff3b30;\n    font-size: 1rem;\n  }\n\n  h3 {\n    color: #333333;\n    font-size: 2rem;\n    font-weight: 700;\n  }\n\n  p {\n    color: #666666;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n`;\n\ntype BoxIndicatorProps = {\n  dark?: boolean;\n  long?: boolean;\n  borderWidth?: string;\n};\n\nexport const BoxIndicator = styled.section<BoxIndicatorProps>`\n  height: 4rem;\n  border-color: #333333;\n  border-style: solid;\n  box-sizing: border-box;\n\n  ${({ long, dark, borderWidth }) => css`\n    width: ${long ? \"256px\" : \"4rem\"};\n    background-color: ${dark ? \"#333333\" : \"#cccccc\"};\n    border-width: ${borderWidth ? borderWidth : \"1px\"};\n  `};\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 3rem;\n\n  p,\n  h3 {\n    margin: 0;\n  }\n`;\n\nexport const Spacing = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n\n  span {\n    color: #ff3b30;\n    font-size: 1rem;\n  }\n\n  h3 {\n    color: #333333;\n    font-size: 2rem;\n    font-weight: 700;\n  }\n\n  p {\n    color: #333333;\n    font-size: 1rem;\n  }\n`;\n\ntype BoxIndicatorProps = {\n  spacing: string;\n};\n\nexport const BoxIndicator = styled.section<BoxIndicatorProps>`\n  width: ${({ spacing }) => spacing};\n  aspect-ratio: 1;\n  border: 1px solid #ff3b30;\n  background-color: #ff7b74;\n`;\n","import \"./styles.css\";\n\ntype Tokens = {\n  [key: string]: string;\n};\n\ntype GeneralTokensGridProps = {\n  tokens: Tokens;\n  convertRemToPix?: boolean;\n  convertToSize?: boolean;\n};\n\nexport const GeneralTokensGrid = ({\n  tokens,\n  convertRemToPix,\n  convertToSize,\n}: GeneralTokensGridProps) => {\n  return (\n    <table className=\"gtg-container\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Value</th>\n          {!!convertRemToPix && <th>Value</th>}\n          {!!convertToSize && <th>Size</th>}\n        </tr>\n      </thead>\n\n      <tbody>\n        {Object.entries(tokens).map(([name, value]) => (\n          <tr key={name}>\n            <td>{name}</td>\n            <td>{value}</td>\n            {!!convertRemToPix && (\n              <td>{Number(value.replace(\"rem\", \"\")) * 16}px</td>\n            )}\n            {!!convertToSize && (\n              <td>\n                <div className=\"gtg-container__width-td\" style={{ width: `${Number(value.replace(\"rem\", \"\")) * 16}px` }}></div>\n              </td>\n            )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 3rem;\n\n  p,\n  h3 {\n    margin: 0;\n  }\n`;\n\nexport const FontInfos = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n\n  span {\n    font-size: 1rem;\n    color: #ff3b30;\n  }\n\n  h3 {\n  }\n\n  p {\n    font-size: 1rem;\n    color: #666666;\n  }\n`;\n\ntype FontTitleProps = {\n  font: string;\n};\n\nexport const FontTitle = styled.h3<FontTitleProps>`\n  font-size: 2rem;\n  font-weight: 700;\n  font-family: ${({ font }) => font};\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6rem;\n  font-family: \"Roboto\", sans-serif;\n\n  p,\n  h4 {\n    margin: 0;\n  }\n`;\n\nexport const FontSizeInfos = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  gap: 1rem;\n\n  span {\n    color: #ff3b30;\n    font-size: 1rem;\n  }\n\n  h4 {\n    font-size: 1rem;\n    color: #333333;\n  }\n\n  div {\n    font-size: 1rem;\n    color: #666666;\n  }\n`;\n\ntype FontSizeExampleProps = {\n  size: string;\n};\n\nexport const FontSizeExample = styled.p<FontSizeExampleProps>`\n  color: #000000;\n  font-size: ${({ size }) => size};\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6rem;\n  font-family: \"Roboto\", sans-serif;\n\n  p,\n  h4 {\n    margin: 0;\n  }\n`;\n\nexport const FontWeightInfos = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  gap: 1rem;\n\n  span {\n    color: #ff3b30;\n    font-size: 1rem;\n  }\n\n  h4 {\n    font-size: 1rem;\n    color: #333333;\n  }\n\n  div {\n    font-size: 1rem;\n    color: #666666;\n  }\n`;\n\ntype FontWeightExample = {\n  weight: string;\n};\n\nexport const FontWeightExample = styled.p<FontWeightExample>`\n  color: #333333;\n  font-size: 2rem;\n  font-weight: ${({ weight }) => weight};\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6rem;\n  font-family: \"Roboto\", sans-serif;\n\n  p,\n  h4 {\n    margin: 0;\n  }\n`;\n\nexport const Infos = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  gap: 1rem;\n\n  span {\n    color: #ff3b30;\n    font-size: 1rem;\n  }\n\n  h4 {\n    font-size: 1rem;\n    color: #333333;\n  }\n\n  div {\n    font-size: 1rem;\n    color: #666666;\n  }\n`;\n\ntype Example = {\n  lineHeight: string;\n};\n\nexport const Example = styled.p<Example>`\n  color: #333333;\n  font-size: 2rem;\n  font-weight: 700;\n`;\n","import styled from \"styled-components\";\nimport { colors } from \"@onyma-ds/tokens\";\n\nexport const Container = styled.div`\n  font-family: \"Roboto\", sans-serif;\n\n  h2 {\n    font-size: 2rem;\n    font-weight: 700;\n  }\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n\n  th {\n    font-weight: 500;\n    background-color: ${colors.gray_96};\n  }\n\n  th,\n  td {\n    font-size: 0.875rem;\n    padding: 6px;\n    text-align: start;\n    border: 1px solid #cccccc;\n  }\n`;\n"],"names":["Container","styled","BorderType","Borders","BorderSpecification","BoxIndicator","long","dark","borderWidth","css","Spacing","spacing","GeneralTokensGrid","__name","tokens","convertRemToPix","_jsxs","_jsx","convertToSize","name","value","FontInfos","FontTitle","font","FontSizeInfos","FontSizeExample","size","FontWeightInfos","FontWeightExample","weight","Infos","Example","Table","colors"],"mappings":"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"}