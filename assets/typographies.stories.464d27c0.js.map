{"version":3,"file":"typographies.stories.464d27c0.js","sources":["../../src/components/Typographies/index.tsx","../../src/pages/tokens/typographies.stories.mdx"],"sourcesContent":["import {\n  typographies,\n  fonts,\n  fontSizes,\n  fontWeights,\n  lineHeights,\n} from \"@onyma-ds/tokens\";\nimport { replaceUnderlineBy, titleCase } from \"../../utils\";\n\nimport * as SC from \"./styles\";\n\nexport const Typographies = () => {\n  const findFontName = (fontValue: string) => {\n    const fontIndex = Object.values(fonts).findIndex(\n      (font) => font === fontValue\n    );\n    if (fontIndex >= 0) return Object.keys(fonts)[fontIndex];\n    return \"\";\n  };\n\n  const findFontSizeName = (fontSizeValue: string) => {\n    const fontIndex = Object.values(fontSizes).findIndex(\n      (fontSize) => fontSize === fontSizeValue\n    );\n    if (fontIndex >= 0)\n      return Object.keys(fontSizes)[fontIndex].toLocaleUpperCase();\n    return \"\";\n  };\n\n  const findFontWeightName = (fontWeightValue: string) => {\n    const fontIndex = Object.values(fontWeights).findIndex(\n      (fontWeight) => fontWeight === fontWeightValue\n    );\n    if (fontIndex >= 0) return Object.keys(fontWeights)[fontIndex];\n    return \"\";\n  };\n\n  const findLineHeightName = (LineHeightValue: string) => {\n    const fontIndex = Object.values(lineHeights).findIndex(\n      (LineHeight) => LineHeight === LineHeightValue\n    );\n    if (fontIndex >= 0)\n      return Object.keys(lineHeights)[fontIndex].toLocaleUpperCase();\n    return \"\";\n  };\n\n  return (\n    <SC.Container>\n      <h2>Guia de utilização de headings e bodies</h2>\n      <SC.Table>\n        <thead>\n          <tr>\n            <th>Categoria</th>\n            <th>Font Family</th>\n            <th>Font Size</th>\n            <th>Font Weight</th>\n            <th>Line Height</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.entries(typographies).map(([category, typography]) => (\n            <tr key={category}>\n              <td>{titleCase(replaceUnderlineBy(category))}</td>\n              <td>{titleCase(findFontName(typography.fontFamily))}</td>\n              <td>{findFontSizeName(typography.fontSize)}</td>\n              <td>{titleCase(findFontWeightName(typography.fontWeight))}</td>\n              <td>{findLineHeightName(typography.lineHeight)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </SC.Table>\n    </SC.Container>\n  );\n};\n","import { Meta } from \"@storybook/addon-docs\";\nimport { Typographies } from \"../../components\";\n\n<Meta title=\"Tokens/Typographies\" />\n\n<Typographies />\n"],"names":["Typographies","__name","findFontName","fontValue","fontIndex","Object","values","fonts","findIndex","font","keys","findFontSizeName","fontSizeValue","fontSizes","fontSize","toLocaleUpperCase","findFontWeightName","fontWeightValue","fontWeights","fontWeight","findLineHeightName","LineHeightValue","lineHeights","LineHeight","_jsxs","SC.Container","_jsx","SC.Table","entries","typographies","map","category","typography","titleCase","replaceUnderlineBy","fontFamily","lineHeight","layoutProps","MDXLayout","MDXContent","components","props","mdx","Meta","isMDXComponent","__page","Error","parameters","docsOnly","componentMeta","title","includeStories","mdxStoryNameToKey","docs","page","AddContext","__namedExportsOrder"],"mappings":"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"}